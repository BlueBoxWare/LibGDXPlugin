{

  parserClass = 'com.gmail.blueboxware.libgdxplugin.filetypes.json.GdxJsonParser'
  parserUtilClass="com.gmail.blueboxware.libgdxplugin.filetypes.json.GdxJsonParserUtil"
  psiPackage = 'com.gmail.blueboxware.libgdxplugin.filetypes.json.psi'
  psiImplPackage = 'com.gmail.blueboxware.libgdxplugin.filetypes.json.psi.impl'

  elementTypeHolderClass = 'com.gmail.blueboxware.libgdxplugin.filetypes.json.GdxJsonElementTypes'
  elementTypeClass = 'com.gmail.blueboxware.libgdxplugin.filetypes.json.GdxJsonElementType'
  psiClassPrefix = "GdxJson"
  psiVisitorName = "GdxJsonElementVisitor"

  tokenTypeClass = 'com.gmail.blueboxware.libgdxplugin.filetypes.json.GdxJsonTokenType'

  implements("jobject|array|value|property|string") = "com.gmail.blueboxware.libgdxplugin.filetypes.json.psi.GdxJsonElement"
  implements("property_name") = "com.gmail.blueboxware.libgdxplugin.filetypes.json.psi.GdxJsonString"

  name("jobject") = 'object'
  name("property_name") = 'property name'

  tokens = [
        L_CURLY='{'
        R_CURLY='}'
        L_BRACKET='['
        R_BRACKET=']'
        COMMA=','
        COLON=':'
        DOUBLE_QUOTE='"'
        SLASH='/'
        BACK_SLASH='\'
        ASTERIX='*'

        LINE_COMMENT='regexp://.*'
        BLOCK_COMMENT='regexp:/\*([^*]|\*+[^*/])*(\*+/)?'

        DOUBLE_QUOTED_STRING='regexp:"([^\\"\r\n]|\\[^\r\n])*"'

        ANY_CHAR='regexp:.'
    ]

}

json ::=  value 

value ::= jobject | array | string {
    methods=[
        getValue
        isPropertyValue
    ]
    mixin="com.gmail.blueboxware.libgdxplugin.filetypes.json.psi.impl.mixins.GdxJsonValueMixin"
}

jobject ::= '{'  property?  (separator  property)* ','?  '}' {
    mixin="com.gmail.blueboxware.libgdxplugin.filetypes.json.psi.impl.mixins.GdxJsonJobjectMixin"
}

array ::= '['  value?  (separator  value )* ','?  ']' {
    mixin="com.gmail.blueboxware.libgdxplugin.filetypes.json.psi.impl.mixins.GdxJsonArrayMixin"
}

property ::= property_name  ':'  value  {
    mixin="com.gmail.blueboxware.libgdxplugin.filetypes.json.psi.impl.mixins.GdxJsonPropertyMixin"
    pin = 1
    recoverWhile = not_brace_or_separator
}

private not_brace_or_separator ::= !( '}' | separator)

string ::= DOUBLE_QUOTED_STRING | unquoted_value_string {
    mixin="com.gmail.blueboxware.libgdxplugin.filetypes.json.psi.impl.mixins.GdxJsonStringMixin"
    methods=[
        isQuoted
        getValue

        DOUBLE_QUOTED_STRING=""
    ]
}

property_name ::= DOUBLE_QUOTED_STRING | unquoted_name_string {
    mixin="com.gmail.blueboxware.libgdxplugin.filetypes.json.psi.impl.mixins.GdxJsonPropertyNameMixin"
    methods=[
        getValue
        isQuoted

        DOUBLE_QUOTED_STRING=""
    ]
}

//noinspection BnfUnusedRule
null ::= /* dummy */
//noinspection BnfUnusedRule
boolean ::= /* dummy */
//noinspection BnfUnusedRule
number ::= /* dummy */

external unquoted_value_string ::= parseUnquotedValueString
external unquoted_name_string ::= parseUnquotedNameString
external separator ::= parseSeparator